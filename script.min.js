const _0xd291f0=_0x4bd0;function _0x4bd0(_0x2aac6b,_0x1e2898){const _0x216719=_0x2167();return _0x4bd0=function(_0x4bd033,_0x2539da){_0x4bd033=_0x4bd033-0x8c;let _0x47edba=_0x216719[_0x4bd033];return _0x47edba;},_0x4bd0(_0x2aac6b,_0x1e2898);}(function(_0x2e1f51,_0x5894eb){const _0xf739c=_0x4bd0,_0x407f64=_0x2e1f51();while(!![]){try{const _0x4004eb=parseInt(_0xf739c(0xd5))/0x1+-parseInt(_0xf739c(0xcd))/0x2+parseInt(_0xf739c(0xd0))/0x3+-parseInt(_0xf739c(0xe5))/0x4*(parseInt(_0xf739c(0xf6))/0x5)+parseInt(_0xf739c(0xd1))/0x6*(parseInt(_0xf739c(0xf0))/0x7)+parseInt(_0xf739c(0xa2))/0x8*(-parseInt(_0xf739c(0xc1))/0x9)+-parseInt(_0xf739c(0xa5))/0xa*(-parseInt(_0xf739c(0xd3))/0xb);if(_0x4004eb===_0x5894eb)break;else _0x407f64['push'](_0x407f64['shift']());}catch(_0x494902){_0x407f64['push'](_0x407f64['shift']());}}}(_0x2167,0x8abea));import _0x523612 from'https://esm.sh/react';import _0x109eb3 from'https://esm.sh/react-dom';import _0x2645c5 from'./PythonStudyGuideBook.js';function _0x2167(){const _0x10711d=['Variables\x20are\x20names\x20assigned\x20to\x20data\x20stored\x20in\x20memory.\x20They\x20can\x20hold\x20various\x20types\x20of\x20data,\x20and\x20their\x20value\x20can\x20change\x20during\x20program\x20execution.\x0a\x0aExample:\x0a```python\x0alength\x20=\x205\x20\x20#\x20Assign\x205\x20to\x20variable\x20length\x0awidth\x20=\x2010\x20\x20#\x20Assign\x2010\x20to\x20variable\x20width\x0aarea\x20=\x20length\x20*\x20width\x20\x20#\x20Calculate\x20area\x20by\x20multiplying\x20length\x20and\x20width\x0a```','https://www.youtube.com/watch?v=ho05egqcPl4','Constants','What\x20is\x20a\x20String\x20in\x20Python?','Introduction\x20to\x20Data\x20Structures','1893820NKoMBW','Escape\x20sequences\x20in\x20Python\x20strings\x20are\x20used\x20to\x20represent\x20certain\x20special\x20characters.\x0a\x0aExamples:\x0a```python\x0a#\x20Newline\x0aprint(\x22Hello\x5cnWorld\x22)\x20\x20#\x20Output:\x20Hello\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#\x20\x20\x20\x20\x20\x20\x20\x20\x20World\x0a\x0a#\x20Tab\x0aprint(\x22Hello\x5ctWorld\x22)\x20\x20#\x20Output:\x20Hello\x20\x20\x20\x20World\x0a\x0a#\x20Backslash\x0aprint(\x22This\x20is\x20a\x20backslash:\x20\x5c\x5c\x22)\x20\x20#\x20Output:\x20This\x20is\x20a\x20backslash:\x20\x5c\x0a\x0a#\x20Single\x20and\x20double\x20quotes\x0aprint(\x27It\x5c\x27s\x20a\x20beautiful\x20day\x27)\x20\x20#\x20Output:\x20It\x27s\x20a\x20beautiful\x20day\x0aprint(\x22She\x20said,\x20\x5c\x22Hello!\x5c\x22\x22)\x20\x20#\x20Output:\x20She\x20said,\x20\x22Hello!\x22\x0a\x0a#\x20Unicode\x20characters\x0aprint(\x22\x5cu03A9\x22)\x20\x20#\x20Output:\x20Ω\x20(Greek\x20capital\x20letter\x20Omega)\x0a\x0a#\x20Raw\x20string\x20(ignores\x20escape\x20sequences)\x0aprint(r\x22This\x20is\x20a\x20raw\x20string:\x20\x5cn\x20does\x20not\x20create\x20a\x20new\x20line\x22)\x0a#\x20Output:\x20This\x20is\x20a\x20raw\x20string:\x20\x5cn\x20does\x20not\x20create\x20a\x20new\x20line\x0a```','Algorithms\x20are\x20step-by-step\x20procedures\x20or\x20formulas\x20for\x20solving\x20a\x20problem.\x20In\x20Python,\x20algorithms\x20can\x20be\x20implemented\x20using\x20functions,\x20loops,\x20conditionals,\x20and\x20recursion.\x20Common\x20algorithm\x20types\x20include\x20sorting,\x20searching,\x20and\x20traversal\x20algorithms.\x0a\x0aExample:\x0aA\x20simple\x20algorithm\x20to\x20find\x20the\x20maximum\x20value\x20in\x20a\x20list:\x0a\x0a```python\x0adef\x20find_max(arr):\x0a\x20\x20\x20\x20max_value\x20=\x20arr[0]\x0a\x20\x20\x20\x20for\x20num\x20in\x20arr:\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20num\x20>\x20max_value:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20max_value\x20=\x20num\x0a\x20\x20\x20\x20return\x20max_value\x0a\x0a#\x20Example\x20usage\x0anumbers\x20=\x20[4,\x202,\x209,\x207,\x205,\x201]\x0aprint(find_max(numbers))\x20\x20#\x20Outputs:\x209\x0a```','3083616EJddHj','4543326luiulE','Insertion\x20Sort','9535009tGDXRs','Reserved\x20Words','561431HOXFcn','Accessing\x20characters\x20in\x20Python\x20String','https://www.youtube.com/watch?v=O6qX5xHXWpI','Study\x20Guide\x20for\x20Sorting\x20Algorithms','Order\x20of\x20Operations','Python\x20provides\x20many\x20built-in\x20methods\x20for\x20string\x20manipulation.\x0a\x0aExamples:\x0a```python\x0as\x20=\x20\x22\x20\x20Hello,\x20World!\x20\x20\x22\x0a\x0a#\x20Basic\x20operations\x0aprint(len(s))\x20\x20#\x20Output:\x2017\x20(length\x20of\x20string)\x0aprint(s.lower())\x20\x20#\x20Output:\x20\x20\x20hello,\x20world!\x20\x20\x0aprint(s.upper())\x20\x20#\x20Output:\x20\x20\x20HELLO,\x20WORLD!\x20\x20\x0aprint(s.strip())\x20\x20#\x20Output:\x20Hello,\x20World!\x20(removes\x20leading/trailing\x20whitespace)\x0a\x0a#\x20Splitting\x20and\x20joining\x0awords\x20=\x20s.split(\x27,\x27)\x20\x20#\x20Split\x20string\x20into\x20list\x0aprint(words)\x20\x20#\x20Output:\x20[\x27\x20\x20Hello\x27,\x20\x27\x20World!\x20\x20\x27]\x0anew_s\x20=\x20\x27-\x27.join(words)\x20\x20#\x20Join\x20list\x20into\x20string\x0aprint(new_s)\x20\x20#\x20Output:\x20\x20\x20Hello-\x20World!\x20\x20\x0a\x0a#\x20Checking\x20string\x20content\x0aprint(s.startswith(\x27\x20\x20Hello\x27))\x20\x20#\x20Output:\x20True\x0aprint(s.endswith(\x27World!\x20\x20\x27))\x20\x20#\x20Output:\x20True\x0aprint(\x27Hello\x27\x20in\x20s)\x20\x20#\x20Output:\x20True\x0a\x0a#\x20Finding\x20substrings\x0aprint(s.find(\x27World\x27))\x20\x20#\x20Output:\x209\x20(index\x20where\x20\x27World\x27\x20starts)\x0aprint(s.count(\x27l\x27))\x20\x20#\x20Output:\x203\x20(count\x20of\x20\x27l\x27\x20in\x20the\x20string)\x0a\x0a#\x20Replacing\x20substrings\x0aprint(s.replace(\x27Hello\x27,\x20\x27Hi\x27))\x20\x20#\x20Output:\x20\x20\x20Hi,\x20World!\x20\x20\x0a\x0a#\x20Checking\x20string\x20type\x0aprint(\x27123\x27.isdigit())\x20\x20#\x20Output:\x20True\x0aprint(\x27abc\x27.isalpha())\x20\x20#\x20Output:\x20True\x0aprint(\x27Python3.6\x27.isalnum())\x20\x20#\x20Output:\x20True\x0a```','You\x20can\x20convert\x20between\x20strings\x20and\x20other\x20data\x20types\x20using\x20functions\x20like\x20int()\x20and\x20float().\x20If\x20the\x20string\x20doesn\x27t\x20contain\x20numeric\x20characters,\x20it\x20will\x20raise\x20an\x20error.\x0a\x0aExample:\x0a```python\x0anum_str\x20=\x20\x27123\x27\x0anum\x20=\x20int(num_str)\x20\x20#\x20Converts\x20the\x20string\x20\x27123\x27\x20to\x20the\x20integer\x20123\x0aprint(num)\x20\x20#\x20Outputs:\x20123\x0a\x0a#\x20This\x20will\x20raise\x20an\x20error:\x0a#\x20error_num\x20=\x20int(\x27abc\x27)\x0a```','https://www.youtube.com/watch?v=2DNItBUngrA','Type\x20Conversions','Merge\x20Sort','Reserved\x20words\x20are\x20predefined\x20keywords\x20in\x20Python\x20that\x20have\x20specific\x20functions.\x20They\x20cannot\x20be\x20used\x20as\x20variable\x20names.\x0a\x0aExamples:\x0a```python\x0aFalse,\x20True,\x20None\x0afor,\x20if,\x20else,\x20while\x0atry,\x20except,\x20finally\x0a```','Definition:\x20Sorts\x20an\x20array\x20by\x20repeatedly\x20finding\x20the\x20minimum\x20element\x20from\x20the\x20unsorted\x20portion\x20and\x20swapping\x20it\x20with\x20the\x20first\x20unsorted\x20element.\x0a\x0aUse\x20Cases:\x20Useful\x20for\x20small\x20datasets\x20or\x20when\x20the\x20cost\x20of\x20swapping\x20elements\x20is\x20cheap.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n²)\x0a-\x20Average:\x20O(n²)\x0a-\x20Best:\x20O(n²)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20selection_sort(arr):\x0a\x20\x20\x20\x20n\x20=\x20len(arr)\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20min_idx\x20=\x20i\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20j\x20in\x20range(i+1,\x20n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20arr[j]\x20<\x20arr[min_idx]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20min_idx\x20=\x20j\x0a\x20\x20\x20\x20\x20\x20\x20\x20arr[i],\x20arr[min_idx]\x20=\x20arr[min_idx],\x20arr[i]\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[64,\x2025,\x2012,\x2022,\x2011]\x0asorted_list\x20=\x20selection_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','Introduction\x20to\x20Python\x20Numbers','Python\x20can\x20implicitly\x20convert\x20between\x20types\x20when\x20needed,\x20but\x20you\x20can\x20also\x20explicitly\x20convert\x20types\x20using\x20built-in\x20functions\x20like\x20int(),\x20float(),\x20and\x20str().\x0a\x0aExample:\x0a```python\x0afloat_num\x20=\x2010.5\x0aint_num\x20=\x20int(float_num)\x20\x20#\x20Converts\x20float\x2010.5\x20to\x20integer\x2010\x0aprint(int_num)\x20\x20#\x20Outputs:\x2010\x0a\x0aint_num\x20=\x2042\x0afloat_num\x20=\x20float(int_num)\x20\x20#\x20Converts\x20integer\x2042\x20to\x20float\x2042.0\x0aprint(float_num)\x20\x20#\x20Outputs:\x2042.0\x0a```','createElement','Python\x20Integer','148KoJhGu','Variables','Constants\x20refer\x20to\x20values\x20that\x20remain\x20unchanged\x20throughout\x20the\x20execution\x20of\x20a\x20program.\x20These\x20can\x20include\x20numbers,\x20text\x20strings,\x20and\x20more.\x0a\x0aExamples:\x0a```python\x0aprint(45)\x20\x20#\x20Outputs:\x2045\x0aprint(3.1415)\x20\x20#\x20Outputs:\x203.1415\x0aprint(\x27Welcome\x20to\x20Python!\x27)\x20\x20#\x20Outputs:\x20Welcome\x20to\x20Python\x0a```','String\x20Conversions','Python\x20String\x20Reversed','Stacks\x20and\x20Queues','Time\x20and\x20Space\x20Complexity','https://www.youtube.com/watch?v=pM-6r5xsNEY','Assignment\x20Statements','Definition:\x20A\x20generalization\x20of\x20insertion\x20sort\x20that\x20allows\x20the\x20exchange\x20of\x20far-apart\x20elements\x20to\x20reduce\x20large\x20inversions.\x0a\x0aUse\x20Cases:\x20Useful\x20for\x20medium-sized\x20datasets\x20where\x20an\x20improvement\x20over\x20insertion\x20sort\x20is\x20needed.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n²)\x0a-\x20Average:\x20O(n\x20log\x20n)\x0a-\x20Best:\x20O(n\x20log\x20n)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20shell_sort(arr):\x0a\x20\x20\x20\x20n\x20=\x20len(arr)\x0a\x20\x20\x20\x20gap\x20=\x20n\x20//\x202\x0a\x20\x20\x20\x20while\x20gap\x20>\x200:\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20i\x20in\x20range(gap,\x20n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20temp\x20=\x20arr[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20j\x20=\x20i\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20while\x20j\x20>=\x20gap\x20and\x20arr[j\x20-\x20gap]\x20>\x20temp:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[j]\x20=\x20arr[j\x20-\x20gap]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20j\x20-=\x20gap\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[j]\x20=\x20temp\x0a\x20\x20\x20\x20\x20\x20\x20\x20gap\x20//=\x202\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[64,\x2034,\x2025,\x2012,\x2022,\x2011,\x2090]\x0asorted_list\x20=\x20shell_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','Variables,\x20Expressions,\x20and\x20Statements','7olgpUt','Useful\x20Python\x20String\x20Operations','Graph\x20Algorithms','Python\x20supports\x20various\x20mathematical\x20operations\x20like\x20addition,\x20subtraction,\x20multiplication,\x20and\x20division.\x20You\x20can\x20also\x20use\x20other\x20operators\x20like\x20modulus\x20(%)\x20and\x20exponentiation\x20(**).\x0a\x0aExamples:\x0a```python\x0a#\x20Addition\x0aprint(5\x20+\x203)\x20\x20#\x20Outputs:\x208\x0a\x0a#\x20Subtraction\x0aprint(9\x20-\x204)\x20\x20#\x20Outputs:\x205\x0a\x0a#\x20Multiplication\x0aprint(7\x20*\x206)\x20\x20#\x20Outputs:\x2042\x0a\x0a#\x20Division\x0aprint(10\x20/\x202)\x20\x20#\x20Outputs:\x205.0\x0a\x0a#\x20Modulus\x20(remainder)\x0aprint(10\x20%\x203)\x20\x20#\x20Outputs:\x201\x0a\x0a#\x20Exponentiation\x0aprint(2\x20**\x203)\x20\x20#\x20Outputs:\x208\x0a\x0a#\x20Complex\x20expression\x0aresult\x20=\x20(5\x20+\x203)\x20*\x202\x20-\x204\x20/\x202\x0aprint(result)\x20\x20#\x20Outputs:\x2014.0\x0a```\x0a\x0aThese\x20operators\x20can\x20be\x20combined\x20to\x20form\x20more\x20complex\x20expressions.\x20Remember\x20to\x20use\x20parentheses\x20to\x20control\x20the\x20order\x20of\x20operations\x20when\x20needed.','Graphs\x20are\x20data\x20structures\x20that\x20consist\x20of\x20nodes\x20(vertices)\x20and\x20edges\x20connecting\x20them.\x20Common\x20graph\x20traversal\x20algorithms\x20include\x20Depth-First\x20Search\x20(DFS)\x20and\x20Breadth-First\x20Search\x20(BFS).\x0a\x0aExample\x20(DFS):\x0a\x0a```python\x0adef\x20dfs(graph,\x20start,\x20visited=None):\x0a\x20\x20\x20\x20if\x20visited\x20is\x20None:\x0a\x20\x20\x20\x20\x20\x20\x20\x20visited\x20=\x20set()\x0a\x20\x20\x20\x20visited.add(start)\x0a\x20\x20\x20\x20print(start,\x20end=\x27\x20\x27)\x0a\x20\x20\x20\x20for\x20next_node\x20in\x20graph[start]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20next_node\x20not\x20in\x20visited:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20dfs(graph,\x20next_node,\x20visited)\x0a\x20\x20\x20\x20return\x20visited\x0a\x0a#\x20Example\x20usage\x0agraph\x20=\x20{\x0a\x20\x20\x20\x20\x27A\x27:\x20[\x27B\x27,\x20\x27C\x27],\x0a\x20\x20\x20\x20\x27B\x27:\x20[\x27A\x27,\x20\x27D\x27,\x20\x27E\x27],\x0a\x20\x20\x20\x20\x27C\x27:\x20[\x27A\x27,\x20\x27F\x27],\x0a\x20\x20\x20\x20\x27D\x27:\x20[\x27B\x27],\x0a\x20\x20\x20\x20\x27E\x27:\x20[\x27B\x27,\x20\x27F\x27],\x0a\x20\x20\x20\x20\x27F\x27:\x20[\x27C\x27,\x20\x27E\x27]\x0a}\x0a\x0aprint(\x22DFS\x20traversal:\x22)\x0adfs(graph,\x20\x27A\x27)\x20\x20#\x20Outputs:\x20A\x20B\x20D\x20E\x20F\x20C\x0a```','Python\x20supports\x20various\x20mathematical\x20operations\x20like\x20addition,\x20subtraction,\x20multiplication,\x20and\x20division.\x20You\x20can\x20also\x20use\x20other\x20operators\x20like\x20modulus\x20(%)\x20and\x20exponentiation\x20(**).\x0a\x0aExamples:\x0a```python\x0a#\x20Addition\x0aprint(5\x20+\x203)\x20\x20#\x20Outputs:\x208\x0a\x0a#\x20Subtraction\x0aprint(9\x20-\x204)\x20\x20#\x20Outputs:\x205\x0a\x0a#\x20Multiplication\x0aprint(7\x20*\x206)\x20\x20#\x20Outputs:\x2042\x0a\x0a#\x20Division\x0aprint(10\x20/\x202)\x20\x20#\x20Outputs:\x205.0\x0a\x0a#\x20Modulus\x20(remainder)\x0aprint(10\x20%\x203)\x20\x20#\x20Outputs:\x201\x0a\x0a#\x20Exponentiation\x0aprint(2\x20**\x203)\x20\x20#\x20Outputs:\x208\x0a```','150940bagmDJ','The\x20input()\x20function\x20captures\x20user\x20input\x20as\x20a\x20string.\x20To\x20use\x20it\x20as\x20a\x20number,\x20you\x20must\x20convert\x20it\x20to\x20the\x20appropriate\x20type\x20using\x20int()\x20or\x20float().\x0a\x0aExample:\x0a```python\x0auser_input\x20=\x20input(\x22Enter\x20a\x20number:\x20\x22)\x0anum\x20=\x20int(user_input)\x20\x20#\x20Converts\x20input\x20to\x20an\x20integer\x0aresult\x20=\x20num\x20*\x202\x0aprint(f\x22Twice\x20your\x20number\x20is:\x20{result}\x22)\x0a```','Definition:\x20A\x20non-comparison-based\x20sorting\x20algorithm\x20that\x20sorts\x20numbers\x20digit\x20by\x20digit,\x20starting\x20from\x20the\x20least\x20significant\x20digit.\x0a\x0aUse\x20Cases:\x20Efficient\x20for\x20sorting\x20large\x20datasets\x20of\x20numbers\x20or\x20strings\x20with\x20fixed\x20digit\x20lengths.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(nk),\x20where\x20k\x20is\x20the\x20number\x20of\x20digits.\x0a-\x20Average:\x20O(nk)\x0a-\x20Best:\x20O(nk)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20counting_sort_for_radix(arr,\x20exp):\x0a\x20\x20\x20\x20n\x20=\x20len(arr)\x0a\x20\x20\x20\x20output\x20=\x20[0]\x20*\x20n\x0a\x20\x20\x20\x20count\x20=\x20[0]\x20*\x2010\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20index\x20=\x20(arr[i]\x20//\x20exp)\x20%\x2010\x0a\x20\x20\x20\x20\x20\x20\x20\x20count[index]\x20+=\x201\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(1,\x2010):\x0a\x20\x20\x20\x20\x20\x20\x20\x20count[i]\x20+=\x20count[i\x20-\x201]\x0a\x0a\x20\x20\x20\x20i\x20=\x20n\x20-\x201\x0a\x20\x20\x20\x20while\x20i\x20>=\x200:\x0a\x20\x20\x20\x20\x20\x20\x20\x20index\x20=\x20(arr[i]\x20//\x20exp)\x20%\x2010\x0a\x20\x20\x20\x20\x20\x20\x20\x20output[count[index]\x20-\x201]\x20=\x20arr[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20count[index]\x20-=\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20i\x20-=\x201\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20arr[i]\x20=\x20output[i]\x0a\x0adef\x20radix_sort(arr):\x0a\x20\x20\x20\x20max_num\x20=\x20max(arr)\x0a\x20\x20\x20\x20exp\x20=\x201\x0a\x20\x20\x20\x20while\x20max_num\x20//\x20exp\x20>\x200:\x0a\x20\x20\x20\x20\x20\x20\x20\x20counting_sort_for_radix(arr,\x20exp)\x0a\x20\x20\x20\x20\x20\x20\x20\x20exp\x20*=\x2010\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[170,\x2045,\x2075,\x2090,\x20802,\x2024,\x202,\x2066]\x0asorted_list\x20=\x20radix_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','Arithmetic\x20operations\x20on\x20floating-point\x20numbers\x20can\x20sometimes\x20give\x20unexpected\x20results\x20due\x20to\x20the\x20binary\x20representation\x20of\x20decimal\x20numbers.\x0a\x0aExample\x20of\x20unexpected\x20results:\x0a```python\x0aprint(1.1\x20+\x202.2)\x20\x20#\x20Output:\x203.3000000000000003\x0aprint(1.2\x20-\x201.0)\x20\x20#\x20Output:\x200.19999999999999996\x0a```\x0a\x0aTo\x20handle\x20these\x20cases,\x20Python\x20provides\x20the\x20decimal\x20module:\x0a\x0a```python\x0aimport\x20decimal\x0a\x0aa\x20=\x20decimal.Decimal(\x271.1\x27)\x0ab\x20=\x20decimal.Decimal(\x272.2\x27)\x0ac\x20=\x20a\x20+\x20b\x0aprint(c)\x20\x20#\x20Output:\x203.3\x0a```\x0a\x0aUse\x20the\x20decimal\x20module\x20when:\x0a-\x20You\x20want\x20to\x20define\x20the\x20required\x20accuracy\x20on\x20your\x20own\x0a-\x20For\x20financial\x20applications\x20that\x20need\x20precise\x20decimal\x20representations\x0a\x0aNote:\x20For\x20more\x20information\x20about\x20decimal\x20numbers\x20in\x20Python\x20and\x20the\x20functions\x20provided\x20by\x20this\x20module,\x20refer\x20to\x20Decimal\x20Functions\x20in\x20Python.','Python\x20String\x20constants','Python\x20follows\x20specific\x20rules\x20for\x20the\x20order\x20of\x20operations,\x20also\x20known\x20as\x20operator\x20precedence.\x20This\x20means\x20certain\x20operations\x20will\x20be\x20performed\x20before\x20others\x20in\x20complex\x20expressions.\x0a\x0aPrecedence\x20Order:\x0a1.\x20Parentheses\x0a2.\x20Exponentiation\x20(**)\x0a3.\x20Multiplication,\x20Division,\x20and\x20Modulus\x20(*,\x20/,\x20%)\x0a4.\x20Addition\x20and\x20Subtraction\x20(+,\x20-)\x0a\x0aExample:\x0a```python\x0aresult\x20=\x202\x20+\x203\x20*\x204\x20\x20#\x20Outputs\x2014,\x20not\x2020,\x20because\x20multiplication\x20is\x20performed\x20first\x0aprint(result)\x20\x20#\x20Outputs:\x2014\x0a\x0aresult\x20=\x20(2\x20+\x203)\x20*\x204\x20\x20#\x20Parentheses\x20change\x20the\x20order\x20of\x20operations\x0aprint(result)\x20\x20#\x20Outputs:\x2020\x0a```','String\x20Slicing\x20Python','Bubble\x20Sort','Definition:\x20A\x20divide-and-conquer\x20algorithm\x20that\x20selects\x20a\x20pivot,\x20partitions\x20the\x20array\x20around\x20the\x20pivot,\x20and\x20recursively\x20sorts\x20the\x20subarrays.\x0a\x0aUse\x20Cases:\x20Preferred\x20for\x20large\x20datasets\x20with\x20average-case\x20O(n\x20log\x20n).\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n²)\x0a-\x20Average:\x20O(n\x20log\x20n)\x0a-\x20Best:\x20O(n\x20log\x20n)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20quick_sort(arr):\x0a\x20\x20\x20\x20if\x20len(arr)\x20<=\x201:\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20arr\x0a\x20\x20\x20\x20pivot\x20=\x20arr[len(arr)\x20//\x202]\x0a\x20\x20\x20\x20left\x20=\x20[x\x20for\x20x\x20in\x20arr\x20if\x20x\x20<\x20pivot]\x0a\x20\x20\x20\x20middle\x20=\x20[x\x20for\x20x\x20in\x20arr\x20if\x20x\x20==\x20pivot]\x0a\x20\x20\x20\x20right\x20=\x20[x\x20for\x20x\x20in\x20arr\x20if\x20x\x20>\x20pivot]\x0a\x20\x20\x20\x20return\x20quick_sort(left)\x20+\x20middle\x20+\x20quick_sort(right)\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[1,\x207,\x204,\x201,\x2010,\x209,\x20-2]\x0asorted_list\x20=\x20quick_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','Create\x20a\x20String\x20in\x20Python','Counting\x20Sort','A\x20tree\x20is\x20a\x20hierarchical\x20data\x20structure\x20where\x20each\x20node\x20has\x20a\x20value\x20and\x20references\x20to\x20its\x20children.\x20Common\x20tree\x20types\x20include\x20binary\x20trees,\x20binary\x20search\x20trees,\x20and\x20heaps.\x0a\x0aExample\x20(Binary\x20Search\x20Tree):\x0a\x0a```python\x0aclass\x20Node:\x0a\x20\x20\x20\x20def\x20__init__(self,\x20key):\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.left\x20=\x20None\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.right\x20=\x20None\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.val\x20=\x20key\x0a\x0adef\x20insert(root,\x20key):\x0a\x20\x20\x20\x20if\x20root\x20is\x20None:\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20Node(key)\x0a\x20\x20\x20\x20if\x20key\x20<\x20root.val:\x0a\x20\x20\x20\x20\x20\x20\x20\x20root.left\x20=\x20insert(root.left,\x20key)\x0a\x20\x20\x20\x20else:\x0a\x20\x20\x20\x20\x20\x20\x20\x20root.right\x20=\x20insert(root.right,\x20key)\x0a\x20\x20\x20\x20return\x20root\x0a\x0adef\x20inorder(root):\x0a\x20\x20\x20\x20if\x20root:\x0a\x20\x20\x20\x20\x20\x20\x20\x20inorder(root.left)\x0a\x20\x20\x20\x20\x20\x20\x20\x20print(root.val,\x20end=\x22\x20\x22)\x0a\x20\x20\x20\x20\x20\x20\x20\x20inorder(root.right)\x0a\x0a#\x20Example\x20usage\x0aroot\x20=\x20None\x0aroot\x20=\x20insert(root,\x2050)\x0ainsert(root,\x2030)\x0ainsert(root,\x2020)\x0ainsert(root,\x2040)\x0ainsert(root,\x2070)\x0ainsert(root,\x2060)\x0ainsert(root,\x2080)\x0a\x0aprint(\x22Inorder\x20traversal\x20of\x20the\x20BST:\x22)\x0ainorder(root)\x20\x20#\x20Outputs:\x2020\x2030\x2040\x2050\x2060\x2070\x2080\x0a```','Numbers\x20in\x20Python','Heap\x20Sort','In\x20Python,\x20division\x20between\x20two\x20integers\x20will\x20result\x20in\x20a\x20floating-point\x20value.\x0a\x0aExample:\x0a```python\x0aresult\x20=\x209\x20/\x202\x20\x20#\x20Outputs:\x204.5\x0a\x0a#\x20If\x20you\x20want\x20an\x20integer\x20result,\x20you\x20can\x20use\x20integer\x20division\x20with\x20the\x20//\x20operator:\x0aresult\x20=\x209\x20//\x202\x20\x20#\x20Outputs:\x204\x0a```','Python\x20uses\x20various\x20operators\x20to\x20perform\x20arithmetic\x20operations\x20in\x20numeric\x20expressions.\x0a\x0aExamples:\x0a```python\x0a#\x20Addition\x0aresult\x20=\x205\x20+\x203\x20\x20#\x20Outputs:\x208\x0a\x0a#\x20Subtraction\x0aresult\x20=\x2010\x20-\x204\x20\x20#\x20Outputs:\x206\x0a\x0a#\x20Multiplication\x0aresult\x20=\x206\x20*\x207\x20\x20#\x20Outputs:\x2042\x0a\x0a#\x20Division\x0aresult\x20=\x2016\x20/\x202\x20\x20#\x20Outputs:\x208.0\x0a```','Strings\x20in\x20Python','Comments\x20in\x20Python','Hash\x20Tables','Definition:\x20A\x20non-comparison-based\x20sorting\x20algorithm\x20that\x20counts\x20the\x20occurrences\x20of\x20each\x20element\x20and\x20places\x20them\x20in\x20their\x20correct\x20position\x20in\x20the\x20output\x20array.\x0a\x0aUse\x20Cases:\x20Best\x20for\x20sorting\x20integers\x20within\x20a\x20specific\x20range.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n\x20+\x20k),\x20where\x20k\x20is\x20the\x20range\x20of\x20the\x20input.\x0a-\x20Average:\x20O(n\x20+\x20k)\x0a-\x20Best:\x20O(n\x20+\x20k)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20counting_sort(arr):\x0a\x20\x20\x20\x20max_val\x20=\x20max(arr)\x0a\x20\x20\x20\x20count\x20=\x20[0]\x20*\x20(max_val\x20+\x201)\x0a\x20\x20\x20\x20output\x20=\x20[0]\x20*\x20len(arr)\x0a\x0a\x20\x20\x20\x20for\x20num\x20in\x20arr:\x0a\x20\x20\x20\x20\x20\x20\x20\x20count[num]\x20+=\x201\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(1,\x20len(count)):\x0a\x20\x20\x20\x20\x20\x20\x20\x20count[i]\x20+=\x20count[i\x20-\x201]\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(len(arr)\x20-\x201,\x20-1,\x20-1):\x0a\x20\x20\x20\x20\x20\x20\x20\x20output[count[arr[i]]\x20-\x201]\x20=\x20arr[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20count[arr[i]]\x20-=\x201\x0a\x0a\x20\x20\x20\x20return\x20output\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[4,\x202,\x202,\x208,\x203,\x203,\x201]\x0asorted_list\x20=\x20counting_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','getElementById','A\x20good\x20practice\x20in\x20programming\x20is\x20to\x20use\x20mnemonic\x20variable\x20names,\x20which\x20are\x20descriptive\x20and\x20make\x20it\x20easier\x20to\x20remember\x20what\x20the\x20variable\x20stores.\x0a\x0aExample:\x0a```python\x0ahours_worked\x20=\x2040\x0ahourly_rate\x20=\x2025\x0atotal_pay\x20=\x20hours_worked\x20*\x20hourly_rate\x20\x20#\x20Clearly\x20expresses\x20what\x20the\x20code\x20is\x20doing\x0a```','A\x20complex\x20number\x20consists\x20of\x20real\x20and\x20imaginary\x20parts.\x20For\x20example,\x202\x20+\x203j\x20is\x20a\x20complex\x20number\x20where\x202\x20is\x20the\x20real\x20component,\x20and\x203\x20multiplied\x20by\x20j\x20is\x20an\x20imaginary\x20part.\x0a\x0aExample\x201:\x20Creating\x20Complex\x20and\x20checking\x20type\x0a```python\x0anum\x20=\x206\x20+\x209j\x0aprint(type(num))\x20\x20#\x20Output:\x20<class\x20\x27complex\x27>\x0a```\x0a\x0aExample\x202:\x20Arithmetic\x20Operations\x20with\x20complex\x20numbers\x0a```python\x0aa,\x20b\x20=\x201\x20+\x205j,\x202\x20+\x203j\x0aprint(\x22Addition:\x22,\x20a\x20+\x20b)\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x20(3+8j)\x0aprint(\x22Subtraction:\x22,\x20a\x20-\x20(2\x20-\x203j))\x20\x20#\x20Output:\x20(-1+8j)\x0aprint(\x22Division:\x22,\x20a\x20/\x20b)\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x20(1.3076923076923077+0.5384615384615384j)\x0aprint(\x22Multiplication:\x22,\x20a\x20*\x20b)\x20#\x20Output:\x20(-13+13j)\x0a```','Escape\x20Sequencing\x20in\x20Python','Radix\x20Sort','273496EapJDw','Stacks\x20and\x20queues\x20are\x20linear\x20data\x20structures\x20that\x20follow\x20specific\x20rules\x20for\x20adding\x20and\x20removing\x20elements.\x0a\x0a-\x20Stack:\x20Follows\x20Last\x20In,\x20First\x20Out\x20(LIFO)\x20principle.\x0a-\x20Queue:\x20Follows\x20First\x20In,\x20First\x20Out\x20(FIFO)\x20principle.\x0a\x0aExample\x20(Stack):\x0a\x0a```python\x0aclass\x20Stack:\x0a\x20\x20\x20\x20def\x20__init__(self):\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.stack\x20=\x20[]\x0a\x0a\x20\x20\x20\x20def\x20push(self,\x20data):\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.stack.append(data)\x0a\x0a\x20\x20\x20\x20def\x20pop(self):\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20not\x20self.is_empty():\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20self.stack.pop()\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20def\x20is_empty(self):\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20len(self.stack)\x20==\x200\x0a\x0a#\x20Example\x20usage\x0astack\x20=\x20Stack()\x0astack.push(1)\x0astack.push(2)\x0astack.push(3)\x0aprint(stack.pop())\x20\x20#\x20Outputs:\x203\x0aprint(stack.pop())\x20\x20#\x20Outputs:\x202\x0a```\x0a\x0aExample\x20(Queue):\x0a\x0a```python\x0afrom\x20collections\x20import\x20deque\x0a\x0aqueue\x20=\x20deque()\x0aqueue.append(10)\x20\x20#\x20Add\x20to\x20queue\x0aqueue.append(20)\x0aqueue.append(30)\x0aprint(queue.popleft())\x20\x20#\x20Remove\x20from\x20queue,\x20Outputs:\x2010\x0aprint(queue.popleft())\x20\x20#\x20Outputs:\x2020\x0a```','We\x20can\x20convert\x20one\x20number\x20type\x20into\x20another\x20using\x20two\x20methods:\x0a\x0a1.\x20Using\x20Arithmetic\x20Operations\x20(Implicit\x20Conversion):\x0a```python\x0aa,\x20b\x20=\x201.6,\x205\x0ac\x20=\x20a\x20+\x20b\x0aprint(c)\x20\x20#\x20Output:\x206.6\x0a```\x0a\x0a2.\x20Using\x20built-in\x20functions\x20(Explicit\x20Conversion):\x0a```python\x0aprint(float(2))\x20\x20\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x202.0\x0aprint(int(5.6))\x20\x20\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x205\x0aprint(type(int(\x273\x27)))\x20\x20\x20#\x20Output:\x20<class\x20\x27int\x27>\x0aprint(type(float(\x275.6\x27)))\x20\x20#\x20Output:\x20<class\x20\x27float\x27>\x0aprint(complex(5))\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x20(5+0j)\x0aprint(complex(6.5))\x20\x20\x20\x20\x20#\x20Output:\x20(6.5+0j)\x0a```\x0a\x0aNotes:\x0a-\x20When\x20converting\x20float\x20to\x20int,\x20the\x20decimal\x20part\x20is\x20truncated.\x0a-\x20We\x20can\x27t\x20convert\x20a\x20complex\x20number\x20to\x20int\x20or\x20float.\x0a-\x20We\x20can\x27t\x20apply\x20the\x20complex()\x20function\x20to\x20strings.','10SpqADZ','When\x20multiple\x20operators\x20are\x20used\x20in\x20an\x20expression,\x20Python\x20follows\x20a\x20set\x20of\x20precedence\x20rules\x20to\x20determine\x20the\x20order\x20of\x20operations.\x0a\x0aExample:\x0a```python\x0aresult\x20=\x203\x20+\x204\x20*\x202\x20\x20#\x20Multiplication\x20happens\x20first,\x20so\x20result\x20is\x2011,\x20not\x2014\x0a```','Some\x20string\x20functions\x20have\x20been\x20deprecated\x20in\x20favor\x20of\x20string\x20methods.\x20While\x20they\x20still\x20work\x20in\x20Python\x203,\x20it\x27s\x20recommended\x20to\x20use\x20the\x20newer\x20string\x20methods\x20instead.\x0a\x0aExamples\x20of\x20deprecated\x20functions\x20and\x20their\x20replacements:\x0a```python\x0a#\x20Deprecated:\x20string.lower(s)\x0a#\x20Use\x20instead:\x0as\x20=\x20\x22HELLO\x22\x0aprint(s.lower())\x20\x20#\x20Output:\x20hello\x0a\x0a#\x20Deprecated:\x20string.upper(s)\x0a#\x20Use\x20instead:\x0as\x20=\x20\x22hello\x22\x0aprint(s.upper())\x20\x20#\x20Output:\x20HELLO\x0a\x0a#\x20Deprecated:\x20string.split(s)\x0a#\x20Use\x20instead:\x0as\x20=\x20\x22Hello,World\x22\x0aprint(s.split(\x27,\x27))\x20\x20#\x20Output:\x20[\x27Hello\x27,\x20\x27World\x27]\x0a\x0a#\x20Deprecated:\x20string.join(words)\x0a#\x20Use\x20instead:\x0awords\x20=\x20[\x27Hello\x27,\x20\x27World\x27]\x0aprint(\x27\x20\x27.join(words))\x20\x20#\x20Output:\x20Hello\x20World\x0a\x0a#\x20Deprecated:\x20string.strip(s)\x0a#\x20Use\x20instead:\x0as\x20=\x20\x22\x20\x20Hello\x20\x20\x22\x0aprint(s.strip())\x20\x20#\x20Output:\x20Hello\x0a\x0a#\x20Note:\x20These\x20deprecated\x20functions\x20are\x20from\x20the\x20\x27string\x27\x20module.\x0a#\x20Modern\x20Python\x20code\x20typically\x20uses\x20the\x20string\x20methods\x20directly\x20on\x20string\x20objects.\x0a```','Strings\x20in\x20Python\x20are\x20immutable,\x20which\x20means\x20you\x20cannot\x20delete\x20or\x20update\x20individual\x20characters.\x20However,\x20you\x20can\x20create\x20new\x20strings\x20based\x20on\x20modifications\x20of\x20existing\x20ones.\x0a\x0aExamples:\x0a```python\x0aoriginal\x20=\x20\x22Hello,\x20World!\x22\x0a\x0a#\x20\x27Updating\x27\x20by\x20creating\x20a\x20new\x20string\x0anew_string\x20=\x20original.replace(\x27Hello\x27,\x20\x27Hi\x27)\x0aprint(new_string)\x20\x20#\x20Output:\x20Hi,\x20World!\x0a\x0a#\x20\x27Deleting\x27\x20by\x20slicing\x0awithout_comma\x20=\x20original[:5]\x20+\x20original[6:]\x0aprint(without_comma)\x20\x20#\x20Output:\x20HelloWorld!\x0a\x0a#\x20Attempting\x20to\x20modify\x20the\x20string\x20directly\x20will\x20raise\x20an\x20error\x0a#\x20original[0]\x20=\x20\x27h\x27\x20\x20#\x20This\x20would\x20raise\x20a\x20TypeError\x0a```','Selection\x20Sort','Integer\x20Division','Python\x20Algorithms\x20and\x20Data\x20Structures','Numeric\x20Expressions\x20with\x20Examples','Definition:\x20A\x20comparison-based\x20sorting\x20algorithm\x20that\x20uses\x20a\x20binary\x20heap\x20data\x20structure\x20to\x20create\x20a\x20sorted\x20array.\x0a\x0aUse\x20Cases:\x20Ideal\x20for\x20large\x20datasets,\x20with\x20guaranteed\x20O(n\x20log\x20n)\x20complexity.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n\x20log\x20n)\x0a-\x20Average:\x20O(n\x20log\x20n)\x0a-\x20Best:\x20O(n\x20log\x20n)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20heapify(arr,\x20n,\x20i):\x0a\x20\x20\x20\x20largest\x20=\x20i\x0a\x20\x20\x20\x20left\x20=\x202\x20*\x20i\x20+\x201\x0a\x20\x20\x20\x20right\x20=\x202\x20*\x20i\x20+\x202\x0a\x0a\x20\x20\x20\x20if\x20left\x20<\x20n\x20and\x20arr[i]\x20<\x20arr[left]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20largest\x20=\x20left\x0a\x0a\x20\x20\x20\x20if\x20right\x20<\x20n\x20and\x20arr[largest]\x20<\x20arr[right]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20largest\x20=\x20right\x0a\x0a\x20\x20\x20\x20if\x20largest\x20!=\x20i:\x0a\x20\x20\x20\x20\x20\x20\x20\x20arr[i],\x20arr[largest]\x20=\x20arr[largest],\x20arr[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20heapify(arr,\x20n,\x20largest)\x0a\x0adef\x20heap_sort(arr):\x0a\x20\x20\x20\x20n\x20=\x20len(arr)\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n\x20//\x202\x20-\x201,\x20-1,\x20-1):\x0a\x20\x20\x20\x20\x20\x20\x20\x20heapify(arr,\x20n,\x20i)\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n-1,\x200,\x20-1):\x0a\x20\x20\x20\x20\x20\x20\x20\x20arr[i],\x20arr[0]\x20=\x20arr[0],\x20arr[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20heapify(arr,\x20i,\x200)\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[12,\x2011,\x2013,\x205,\x206,\x207]\x0asorted_list\x20=\x20heap_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','The\x20input()\x20function\x20allows\x20you\x20to\x20take\x20input\x20from\x20the\x20user.\x20The\x20input\x20is\x20always\x20returned\x20as\x20a\x20string,\x20so\x20it\x20often\x20needs\x20to\x20be\x20converted\x20to\x20other\x20types.\x0a\x0aExample:\x0a```python\x0aname\x20=\x20input(\x22Enter\x20your\x20name:\x20\x22)\x0aprint(\x22Hello,\x20\x22\x20+\x20name\x20+\x20\x22!\x22)\x20\x20#\x20Greets\x20the\x20user\x20with\x20their\x20input\x0a```','root','Characters\x20in\x20a\x20string\x20can\x20be\x20accessed\x20using\x20indexing.\x20Python\x20uses\x20zero-based\x20indexing,\x20meaning\x20the\x20first\x20character\x20is\x20at\x20index\x200.\x0a\x0aExamples:\x0a```python\x0amy_string\x20=\x20\x22Python\x22\x0a\x0a#\x20Accessing\x20individual\x20characters\x0aprint(my_string[0])\x20\x20#\x20Output:\x20P\x0aprint(my_string[1])\x20\x20#\x20Output:\x20y\x0a\x0a#\x20Negative\x20indexing\x20(counting\x20from\x20the\x20end)\x0aprint(my_string[-1])\x20\x20#\x20Output:\x20n\x0aprint(my_string[-2])\x20\x20#\x20Output:\x20o\x0a\x0a#\x20Trying\x20to\x20access\x20an\x20index\x20out\x20of\x20range\x20will\x20raise\x20an\x20IndexError\x0a#\x20print(my_string[10])\x20\x20#\x20This\x20would\x20raise\x20an\x20IndexError\x0a```','In\x20Python,\x20every\x20value\x20has\x20a\x20specific\x20type,\x20such\x20as\x20integers,\x20strings,\x20or\x20floats.\x20The\x20type\x20determines\x20what\x20operations\x20you\x20can\x20perform\x20on\x20that\x20value.\x0a\x0aExample:\x0a```python\x0aname\x20=\x20\x22Alice\x22\x0aage\x20=\x2030\x0a\x0aprint(type(name))\x20\x20#\x20Outputs:\x20<class\x20\x27str\x27>\x0aprint(type(age))\x20\x20\x20#\x20Outputs:\x20<class\x20\x27int\x27>\x0a\x0a#\x20You\x20can\x20perform\x20string\x20operations\x20on\x20name\x0aprint(name.upper())\x20\x20#\x20Outputs:\x20ALICE\x0a\x0a#\x20You\x20can\x20perform\x20mathematical\x20operations\x20on\x20age\x0aprint(age\x20+\x205)\x20\x20#\x20Outputs:\x2035\x0a```','In\x20Python,\x20every\x20value\x20has\x20a\x20specific\x20type,\x20such\x20as\x20integers,\x20strings,\x20or\x20floats.\x20The\x20type\x20determines\x20what\x20operations\x20you\x20can\x20perform\x20on\x20that\x20value.\x0a\x0aExample:\x0a```python\x0aname\x20=\x20\x22Alice\x22\x0aage\x20=\x2030\x0a\x0aprint(type(name))\x20\x20#\x20Outputs:\x20<class\x20\x27str\x27>\x0aprint(type(age))\x20\x20\x20#\x20Outputs:\x20<class\x20\x27int\x27>\x0a\x0a#\x20You\x20can\x20perform\x20string\x20operations\x20on\x20name\x0aprint(name.upper())\x20\x20#\x20Outputs:\x20ALICE\x0a\x0a#\x20You\x20can\x20perform\x20mathematical\x20operations\x20on\x20age\x0aprint(age\x20+\x205)\x20\x20#\x20Outputs:\x2035\x0a```\x0a\x0aYou\x20can\x20use\x20the\x20type()\x20function\x20to\x20check\x20the\x20type\x20of\x20any\x20value.\x0a\x0aExample:\x0a```python\x0aprint(type(3.14))\x20\x20#\x20Outputs:\x20<class\x20\x27float\x27>\x0aprint(type(True))\x20\x20#\x20Outputs:\x20<class\x20\x27bool\x27>\x0aprint(type([1,\x202,\x203]))\x20\x20#\x20Outputs:\x20<class\x20\x27list\x27>\x0a```','Mnemonic\x20Variable\x20Names','Decimal\x20Numbers\x20in\x20Python','Searching\x20algorithms\x20are\x20used\x20to\x20find\x20specific\x20elements\x20in\x20a\x20dataset.\x20Popular\x20algorithms\x20include:\x0a\x0a-\x20Linear\x20Search\x0a-\x20Binary\x20Search\x0a\x0aExample:\x0aBinary\x20Search\x20(requires\x20sorted\x20list):\x0a\x0a```python\x0adef\x20binary_search(arr,\x20target):\x0a\x20\x20\x20\x20low,\x20high\x20=\x200,\x20len(arr)\x20-\x201\x0a\x20\x20\x20\x20while\x20low\x20<=\x20high:\x0a\x20\x20\x20\x20\x20\x20\x20\x20mid\x20=\x20(low\x20+\x20high)\x20//\x202\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20arr[mid]\x20==\x20target:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20mid\x0a\x20\x20\x20\x20\x20\x20\x20\x20elif\x20arr[mid]\x20<\x20target:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20low\x20=\x20mid\x20+\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20else:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20high\x20=\x20mid\x20-\x201\x0a\x20\x20\x20\x20return\x20-1\x0a\x0a#\x20Example\x20usage\x0asorted_list\x20=\x20[1,\x203,\x205,\x207,\x209,\x2011,\x2013,\x2015]\x0atarget\x20=\x207\x0aresult\x20=\x20binary_search(sorted_list,\x20target)\x0aprint(f\x22Element\x20{target}\x20found\x20at\x20index:\x20{result}\x22)\x20\x20#\x20Outputs:\x20Element\x207\x20found\x20at\x20index:\x203\x0a```','Summary','Strings\x20in\x20Python\x20can\x20be\x20created\x20using\x20single\x20quotes,\x20double\x20quotes,\x20or\x20triple\x20quotes\x20for\x20multi-line\x20strings.\x0a\x0aExamples:\x0a```python\x0a#\x20Single\x20quotes\x0astr1\x20=\x20\x27Hello\x27\x0a\x0a#\x20Double\x20quotes\x0astr2\x20=\x20\x22World\x22\x0a\x0a#\x20Triple\x20quotes\x20for\x20multi-line\x20strings\x0astr3\x20=\x20\x27\x27\x27This\x20is\x20a\x0amulti-line\x20string\x27\x27\x27\x0a\x0a#\x20String\x20with\x20quotes\x20inside\x0astr4\x20=\x20\x22He\x20said,\x20\x27Python\x20is\x20awesome!\x27\x22\x0a\x0aprint(str1,\x20str2)\x0aprint(str3)\x0aprint(str4)\x0a```','Python\x20Float','Trees','Time\x20and\x20space\x20complexity\x20help\x20evaluate\x20the\x20efficiency\x20of\x20an\x20algorithm.\x20Time\x20complexity\x20refers\x20to\x20the\x20amount\x20of\x20time\x20an\x20algorithm\x20takes\x20to\x20run,\x20while\x20space\x20complexity\x20refers\x20to\x20the\x20amount\x20of\x20memory\x20it\x20uses.\x0a\x0aCommon\x20time\x20complexities\x20include:\x0a-\x20O(1):\x20Constant\x20time\x0a-\x20O(log\x20n):\x20Logarithmic\x20time\x0a-\x20O(n):\x20Linear\x20time\x0a-\x20O(n\x20log\x20n):\x20Linearithmic\x20time\x0a-\x20O(n^2):\x20Quadratic\x20time\x0a-\x20O(2^n):\x20Exponential\x20time\x0a\x0aExample:\x0a\x0a```python\x0a#\x20O(1)\x20-\x20Constant\x20time\x0adef\x20constant_time(n):\x0a\x20\x20\x20\x20return\x20n\x20*\x202\x0a\x0a#\x20O(n)\x20-\x20Linear\x20time\x0adef\x20linear_time(n):\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20print(i)\x0a\x0a#\x20O(n^2)\x20-\x20Quadratic\x20time\x0adef\x20quadratic_time(n):\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20j\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20print(i,\x20j)\x0a\x0a#\x20O(log\x20n)\x20-\x20Logarithmic\x20time\x20(e.g.,\x20binary\x20search)\x0adef\x20binary_search(arr,\x20target):\x0a\x20\x20\x20\x20left,\x20right\x20=\x200,\x20len(arr)\x20-\x201\x0a\x20\x20\x20\x20while\x20left\x20<=\x20right:\x0a\x20\x20\x20\x20\x20\x20\x20\x20mid\x20=\x20(left\x20+\x20right)\x20//\x202\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20arr[mid]\x20==\x20target:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20mid\x0a\x20\x20\x20\x20\x20\x20\x20\x20elif\x20arr[mid]\x20<\x20target:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20left\x20=\x20mid\x20+\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20else:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20right\x20=\x20mid\x20-\x201\x0a\x20\x20\x20\x20return\x20-1\x0a```\x0a\x0aUnderstanding\x20time\x20and\x20space\x20complexity\x20is\x20crucial\x20for\x20writing\x20efficient\x20algorithms\x20and\x20choosing\x20appropriate\x20data\x20structures\x20for\x20specific\x20problems.','Python\x20Variables,\x20Expressions,\x20and\x20Statements','Variable\x20Naming\x20Rules','Definition:\x20A\x20divide-and-conquer\x20algorithm\x20that\x20splits\x20the\x20array\x20into\x20halves,\x20recursively\x20sorts\x20them,\x20and\x20merges\x20the\x20sorted\x20halves.\x0a\x0aUse\x20Cases:\x20Ideal\x20for\x20large\x20datasets\x20where\x20O(n\x20log\x20n)\x20is\x20required.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n\x20log\x20n)\x0a-\x20Average:\x20O(n\x20log\x20n)\x0a-\x20Best:\x20O(n\x20log\x20n)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20merge_sort(arr):\x0a\x20\x20\x20\x20if\x20len(arr)\x20>\x201:\x0a\x20\x20\x20\x20\x20\x20\x20\x20mid\x20=\x20len(arr)\x20//\x202\x0a\x20\x20\x20\x20\x20\x20\x20\x20left_half\x20=\x20arr[:mid]\x0a\x20\x20\x20\x20\x20\x20\x20\x20right_half\x20=\x20arr[mid:]\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20merge_sort(left_half)\x0a\x20\x20\x20\x20\x20\x20\x20\x20merge_sort(right_half)\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20i\x20=\x20j\x20=\x20k\x20=\x200\x0a\x20\x20\x20\x20\x20\x20\x20\x20while\x20i\x20<\x20len(left_half)\x20and\x20j\x20<\x20len(right_half):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20left_half[i]\x20<\x20right_half[j]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[k]\x20=\x20left_half[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20i\x20+=\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[k]\x20=\x20right_half[j]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20j\x20+=\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20k\x20+=\x201\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20while\x20i\x20<\x20len(left_half):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[k]\x20=\x20left_half[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20i\x20+=\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20k\x20+=\x201\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20while\x20j\x20<\x20len(right_half):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[k]\x20=\x20right_half[j]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20j\x20+=\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20k\x20+=\x201\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[38,\x2027,\x2043,\x203,\x209,\x2082,\x2010]\x0asorted_list\x20=\x20merge_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','Searching\x20Algorithms','Deprecated\x20string\x20functions','Python\x20Complex','153wVJWPH','https://www.youtube.com/watch?v=ZS2ruPQm9QQ','Sorting\x20Algorithms','User\x20Input\x20and\x20Conversion','Type\x20Matters','Definition:\x20A\x20simple\x20comparison-based\x20sorting\x20algorithm\x20where\x20adjacent\x20elements\x20are\x20repeatedly\x20swapped\x20if\x20they\x20are\x20in\x20the\x20wrong\x20order.\x0a\x0aUse\x20Cases:\x20Best\x20for\x20small\x20datasets\x20or\x20when\x20simplicity\x20is\x20required.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n²)\x0a-\x20Average:\x20O(n²)\x0a-\x20Best:\x20O(n)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20bubble_sort(arr):\x0a\x20\x20\x20\x20n\x20=\x20len(arr)\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20j\x20in\x20range(0,\x20n-i-1):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20arr[j]\x20>\x20arr[j+1]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[j],\x20arr[j+1]\x20=\x20arr[j+1],\x20arr[j]\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[64,\x2034,\x2025,\x2012,\x2022,\x2011,\x2090]\x0asorted_list\x20=\x20bubble_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','A\x20hash\x20table\x20is\x20a\x20data\x20structure\x20that\x20maps\x20keys\x20to\x20values\x20using\x20a\x20hash\x20function.\x20Hash\x20tables\x20provide\x20fast\x20insertion,\x20deletion,\x20and\x20lookup\x20operations.\x0a\x0aExample\x20(Using\x20Python\x20dictionary):\x0a\x0a```python\x0a#\x20Creating\x20a\x20hash\x20table\x20(dictionary\x20in\x20Python)\x0ahash_table\x20=\x20{}\x0a\x0a#\x20Inserting\x20key-value\x20pairs\x0ahash_table[\x27name\x27]\x20=\x20\x27Alice\x27\x0ahash_table[\x27age\x27]\x20=\x2025\x0ahash_table[\x27city\x27]\x20=\x20\x27New\x20York\x27\x0a\x0a#\x20Accessing\x20values\x0aprint(hash_table[\x27name\x27])\x20\x20#\x20Outputs:\x20Alice\x0a\x0a#\x20Updating\x20values\x0ahash_table[\x27age\x27]\x20=\x2026\x0a\x0a#\x20Deleting\x20key-value\x20pairs\x0adel\x20hash_table[\x27city\x27]\x0a\x0a#\x20Checking\x20if\x20a\x20key\x20exists\x0aif\x20\x27name\x27\x20in\x20hash_table:\x0a\x20\x20\x20\x20print(\x22Name\x20exists\x20in\x20the\x20hash\x20table\x22)\x0a\x0a#\x20Iterating\x20over\x20key-value\x20pairs\x0afor\x20key,\x20value\x20in\x20hash_table.items():\x0a\x20\x20\x20\x20print(f\x22{key}:\x20{value}\x22)\x0a```'];_0x2167=function(){return _0x10711d;};return _0x2167();}let topics={'python_fundamentals':{'title':_0xd291f0(0xbb),'sections':[{'title':_0xd291f0(0xef),'content':'In\x20this\x20section,\x20we\x20explore\x20three\x20fundamental\x20concepts\x20in\x20Python\x20programming:\x0a\x0a-\x20Variables:\x20These\x20are\x20used\x20to\x20store\x20and\x20manage\x20data.\x20We\x27ll\x20cover\x20how\x20to\x20define\x20and\x20use\x20variables,\x20including\x20understanding\x20different\x20data\x20types\x20and\x20best\x20practices\x20for\x20naming.\x0a\x0a-\x20Expressions:\x20Expressions\x20enable\x20you\x20to\x20perform\x20calculations\x20and\x20comparisons.\x20We\x27ll\x20learn\x20how\x20to\x20construct\x20and\x20evaluate\x20expressions\x20to\x20achieve\x20various\x20programming\x20tasks.\x0a\x0a-\x20Statements:\x20Statements\x20control\x20the\x20flow\x20of\x20your\x20program.\x20We’ll\x20examine\x20different\x20types\x20of\x20statements\x20and\x20how\x20they\x20influence\x20the\x20execution\x20of\x20your\x20code.\x0a\x0aMastering\x20these\x20elements\x20will\x20provide\x20a\x20strong\x20foundation\x20for\x20writing\x20effective\x20and\x20efficient\x20Python\x20code.\x20Let\x27s\x20dive\x20in!\x0a\x0a\x27Variables\x20are\x20used\x20to\x20store\x20data\x20that\x20can\x20be\x20used\x20and\x20modified\x20throughout\x20your\x20program.\x20They\x20can\x20hold\x20different\x20data\x20types\x20such\x20as\x20numbers,\x20strings,\x20or\x20even\x20complex\x20objects.\x0a\x0a```python\x0ax\x20=\x2010\x20\x20#\x20Outputs:\x2010\x0ay\x20=\x20\x27Hello,\x20World!\x27\x20\x20#\x20Outputs:\x20Hello,\x20World!\x0api\x20=\x203.14159\x20\x20#\x20Outputs:\x203.14159\x0a```\x0a\x0a###\x20Expressions:\x0aExpressions\x20perform\x20operations\x20such\x20as\x20calculations\x20or\x20comparisons.\x20They\x20combine\x20values\x20and\x20operators\x20to\x20produce\x20a\x20result.\x0a\x0a```python\x0asum\x20=\x205\x20+\x203\x20\x20#\x20Outputs:\x208\x0aarea\x20=\x2010\x20*\x205\x20\x20#\x20Outputs:\x2050\x0ais_equal\x20=\x20(4\x20==\x204)\x20\x20#\x20Outputs:\x20True\x0a```\x0a\x0a###\x20Statements:\x0aStatements\x20control\x20the\x20flow\x20of\x20your\x20program.\x20They\x20include\x20assignments,\x20loops,\x20conditionals,\x20and\x20more,\x20directing\x20what\x20the\x20program\x20should\x20do\x20step\x20by\x20step.\x0a\x0a```python\x0ax\x20=\x205\x20\x20#\x20Outputs:\x205\x0aif\x20x\x20>\x203:\x0a\x20\x20\x20\x20print(\x27x\x20is\x20greater\x20than\x203\x27)\x20\x20#\x20Outputs:\x20x\x20is\x20greater\x20than\x203\x0afor\x20i\x20in\x20range(3):\x0a\x20\x20\x20\x20print(i)\x20\x20#\x20Outputs:\x200,\x201,\x202\x0a```\x0a\x0aTogether,\x20variables\x20store\x20your\x20data,\x20expressions\x20calculate\x20or\x20compare\x20it,\x20and\x20statements\x20dictate\x20how\x20your\x20program\x20runs.\x20Understanding\x20these\x20elements\x20will\x20help\x20you\x20write\x20more\x20effective\x20and\x20efficient\x20code.'},{'title':_0xd291f0(0xca),'content':_0xd291f0(0xe7)},{'title':_0xd291f0(0xd4),'content':_0xd291f0(0xdf)},{'title':_0xd291f0(0xe6),'content':_0xd291f0(0xc8)},{'title':_0xd291f0(0xbc),'content':'When\x20naming\x20variables\x20in\x20Python:\x0a-\x20Names\x20must\x20begin\x20with\x20a\x20letter\x20or\x20underscore.\x0a-\x20They\x20can\x20include\x20letters,\x20numbers,\x20and\x20underscores.\x0a-\x20Variable\x20names\x20are\x20case-sensitive.\x0a\x0aGood\x20examples:\x0a```python\x0aspeed_limit\x20=\x2065\x0astudent_count\x20=\x2030\x0a_active\x20=\x20True\x0a```\x0a\x0aBad\x20examples:\x0a```python\x0a123score\x20=\x20100\x20\x20#\x20Invalid:\x20starts\x20with\x20a\x20number\x0a%profit\x20=\x200.15\x20\x20#\x20Invalid:\x20contains\x20special\x20character\x0aprice&cost\x20=\x2050\x20\x20#\x20Invalid:\x20contains\x20special\x20character\x0a```'},{'title':_0xd291f0(0xb3),'content':_0xd291f0(0x9e)},{'title':_0xd291f0(0xed),'content':'An\x20assignment\x20statement\x20in\x20Python\x20is\x20used\x20to\x20assign\x20a\x20value\x20to\x20a\x20variable.\x20The\x20expression\x20on\x20the\x20right-hand\x20side\x20is\x20evaluated,\x20and\x20the\x20result\x20is\x20stored\x20in\x20the\x20variable\x20on\x20the\x20left.\x0a\x0aExample:\x0a```python\x0ascore\x20=\x2050\x20+\x2030\x20\x20#\x20The\x20result\x20of\x2050\x20+\x2030\x20is\x20assigned\x20to\x20score\x0a```'},{'title':'Numeric\x20Expressions','content':_0xd291f0(0x98)},{'title':'Operator\x20Precedence','content':_0xd291f0(0xa6)},{'title':'Type\x20Conversions','content':'Python\x20can\x20convert\x20between\x20data\x20types\x20using\x20built-in\x20functions\x20like\x20int(),\x20float(),\x20and\x20str().\x0a\x0aExample:\x0a```python\x0aage\x20=\x20\x2230\x22\x0aage_as_int\x20=\x20int(age)\x20\x20#\x20Convert\x20string\x20\x2230\x22\x20to\x20integer\x2030\x0aprint(age_as_int)\x20\x20#\x20Outputs:\x2030\x0a\x0aheight\x20=\x205.7\x0aheight_as_str\x20=\x20str(height)\x20\x20#\x20Convert\x20float\x205.7\x20to\x20string\x20\x225.7\x22\x0aprint(height_as_str)\x20\x20#\x20Outputs:\x20\x225.7\x22\x0a```'},{'title':'User\x20Input','content':_0xd291f0(0xae)},{'title':_0xd291f0(0x9a),'content':'In\x20Python,\x20comments\x20are\x20lines\x20of\x20text\x20ignored\x20by\x20the\x20interpreter.\x20They\x20are\x20useful\x20for\x20documenting\x20code\x20and\x20leaving\x20notes\x20for\x20yourself\x20or\x20other\x20programmers.\x0a\x0aExample:\x0a```python\x0a#\x20This\x20is\x20a\x20comment\x0a#\x20The\x20line\x20below\x20assigns\x20100\x20to\x20the\x20variable\x20score\x0ascore\x20=\x20100\x0a```'},{'title':_0xd291f0(0xaa),'content':_0xd291f0(0x97)},{'title':_0xd291f0(0xe8),'content':_0xd291f0(0xdb)},{'title':_0xd291f0(0xdd),'content':_0xd291f0(0xe2)},{'title':_0xd291f0(0xd9),'content':_0xd291f0(0x8e)},{'title':_0xd291f0(0xc4),'content':_0xd291f0(0xf7)},{'title':_0xd291f0(0xc5),'content':_0xd291f0(0xb1)},{'title':_0xd291f0(0xac),'content':_0xd291f0(0xf5)},{'title':_0xd291f0(0xc5),'content':_0xd291f0(0xb2)},{'title':_0xd291f0(0xac),'content':_0xd291f0(0xf3)}]},'python_strings':{'title':_0xd291f0(0x99),'sections':[{'title':_0xd291f0(0xcb),'content':'A\x20string\x20in\x20Python\x20is\x20a\x20sequence\x20of\x20characters\x20enclosed\x20in\x20single\x20quotes\x20(\x27\x27)\x20or\x20double\x20quotes\x20(\x22\x22).\x20Strings\x20are\x20immutable,\x20which\x20means\x20once\x20created,\x20their\x20contents\x20cannot\x20be\x20changed.\x0a\x0aExample:\x0a```python\x0a#\x20Creating\x20strings\x0asingle_quoted\x20=\x20\x27Hello,\x20World!\x27\x0adouble_quoted\x20=\x20\x22Python\x20Strings\x22\x0a\x0a#\x20Multi-line\x20string\x0amulti_line\x20=\x20\x27\x27\x27This\x20is\x20a\x0amulti-line\x0astring\x27\x27\x27\x0a\x0aprint(single_quoted)\x0aprint(double_quoted)\x0aprint(multi_line)\x0a```'},{'title':_0xd291f0(0x92),'content':_0xd291f0(0xb7)},{'title':_0xd291f0(0xd6),'content':_0xd291f0(0xb0)},{'title':_0xd291f0(0x8f),'content':'String\x20slicing\x20allows\x20you\x20to\x20extract\x20a\x20portion\x20of\x20a\x20string.\x20The\x20syntax\x20is\x20[start:end:step],\x20where\x20start\x20is\x20inclusive\x20and\x20end\x20is\x20exclusive.\x0a\x0aExamples:\x0a```python\x0amy_string\x20=\x20\x22Hello,\x20World!\x22\x0a\x0a#\x20Basic\x20slicing\x0aprint(my_string[0:5])\x20\x20\x20#\x20Output:\x20Hello\x0aprint(my_string[:5])\x20\x20\x20\x20#\x20Output:\x20Hello\x20(omitting\x20start\x20index\x20defaults\x20to\x200)\x0aprint(my_string[7:])\x20\x20\x20\x20#\x20Output:\x20World!\x20(omitting\x20end\x20index\x20goes\x20to\x20the\x20end)\x0a\x0a#\x20Slicing\x20with\x20step\x0aprint(my_string[::2])\x20\x20\x20#\x20Output:\x20Hlo\x20ol!\x20(every\x20second\x20character)\x0aprint(my_string[::-1])\x20\x20#\x20Output:\x20!dlroW\x20,olleH\x20(reverse\x20the\x20string)\x0a\x0a#\x20Negative\x20indexing\x20in\x20slicing\x0aprint(my_string[-6:-1])\x20\x20#\x20Output:\x20World\x0a```'},{'title':_0xd291f0(0xe9),'content':'There\x20are\x20multiple\x20ways\x20to\x20reverse\x20a\x20string\x20in\x20Python.\x0a\x0aExamples:\x0a```python\x0amy_string\x20=\x20\x22Python\x22\x0a\x0a#\x20Using\x20slicing\x0areversed_string\x20=\x20my_string[::-1]\x0aprint(reversed_string)\x20\x20#\x20Output:\x20nohtyP\x0a\x0a#\x20Using\x20reversed()\x20function\x20and\x20join()\x0areversed_string\x20=\x20\x27\x27.join(reversed(my_string))\x0aprint(reversed_string)\x20\x20#\x20Output:\x20nohtyP\x0a\x0a#\x20Using\x20a\x20loop\x20(less\x20efficient\x20for\x20large\x20strings)\x0areversed_string\x20=\x20\x27\x27\x0afor\x20char\x20in\x20my_string:\x0a\x20\x20\x20\x20reversed_string\x20=\x20char\x20+\x20reversed_string\x0aprint(reversed_string)\x20\x20#\x20Output:\x20nohtyP\x0a```'},{'title':'Deleting/Updating\x20from\x20a\x20String','content':_0xd291f0(0xa8)},{'title':_0xd291f0(0xa0),'content':_0xd291f0(0xce)},{'title':'Python\x20String\x20Formatting','content':'Python\x20offers\x20several\x20ways\x20to\x20format\x20strings,\x20including\x20%-formatting,\x20str.format(),\x20and\x20f-strings\x20(formatted\x20string\x20literals).\x0a\x0aExamples:\x0a```python\x0aname\x20=\x20\x22Alice\x22\x0aage\x20=\x2030\x0a\x0a#\x20%-formatting\x20(old\x20style,\x20less\x20readable)\x0aprint(\x22My\x20name\x20is\x20%s\x20and\x20I\x27m\x20%d\x20years\x20old.\x22\x20%\x20(name,\x20age))\x0a\x0a#\x20str.format()\x20method\x0aprint(\x22My\x20name\x20is\x20{}\x20and\x20I\x27m\x20{}\x20years\x20old.\x22.format(name,\x20age))\x0a\x0a#\x20f-strings\x20(Python\x203.6+,\x20most\x20readable\x20and\x20concise)\x0aprint(f\x22My\x20name\x20is\x20{name}\x20and\x20I\x27m\x20{age}\x20years\x20old.\x22)\x0a\x0a#\x20Formatting\x20with\x20dictionaries\x0aperson\x20=\x20{\x27name\x27:\x20\x27Bob\x27,\x20\x27age\x27:\x2025}\x0aprint(\x22%(name)s\x20is\x20%(age)d\x20years\x20old.\x22\x20%\x20person)\x0aprint(\x22{name}\x20is\x20{age}\x20years\x20old.\x22.format(**person))\x0aprint(f\x22{person[\x27name\x27]}\x20is\x20{person[\x27age\x27]}\x20years\x20old.\x22)\x0a\x0a#\x20Number\x20formatting\x0api\x20=\x203.14159\x0aprint(f\x22Pi\x20is\x20approximately\x20{pi:.2f}\x22)\x20\x20#\x20Output:\x20Pi\x20is\x20approximately\x203.14\x0a```'},{'title':_0xd291f0(0xf1),'content':_0xd291f0(0xda)},{'title':_0xd291f0(0x8d),'content':'The\x20string\x20module\x20in\x20Python\x20provides\x20some\x20useful\x20constants.\x0a\x0aExamples:\x0a```python\x0aimport\x20string\x0a\x0a#\x20String\x20constants\x0aprint(string.ascii_lowercase)\x20\x20#\x20Output:\x20abcdefghijklmnopqrstuvwxyz\x0aprint(string.ascii_uppercase)\x20\x20#\x20Output:\x20ABCDEFGHIJKLMNOPQRSTUVWXYZ\x0aprint(string.digits)\x20\x20#\x20Output:\x200123456789\x0aprint(string.punctuation)\x20\x20#\x20Output:\x20!\x22#$%&\x27()*+,-./:;<=>?@[\x5c]^_`{|}~\x0aprint(string.whitespace)\x20\x20#\x20Output:\x20space,\x20tab,\x20newline,\x20return,\x20formfeed,\x20vertical\x20tab\x0a\x0a#\x20Using\x20constants\x20in\x20operations\x0as\x20=\x20\x22Hello123\x22\x0aprint(s.strip(string.digits))\x20\x20#\x20Output:\x20Hello\x0a```'},{'title':_0xd291f0(0xbf),'content':_0xd291f0(0xa7)}]},'python_numbers':{'title':_0xd291f0(0x95),'sections':[{'title':_0xd291f0(0xe1),'content':'In\x20Python,\x20\x22Numbers\x22\x20is\x20a\x20category\x20that\x20encompasses\x20different\x20types\x20of\x20numeric\x20data.\x20Python\x20supports\x20various\x20types\x20of\x20numbers,\x20including\x20integers,\x20floating-point\x20numbers,\x20and\x20complex\x20numbers.\x20Each\x20type\x20has\x20its\x20own\x20characteristics\x20and\x20use\x20cases.'},{'title':_0xd291f0(0xe4),'content':'Python\x20integers\x20(int)\x20are\x20whole\x20numbers,\x20including\x20negative\x20numbers\x20but\x20not\x20fractions.\x20In\x20Python,\x20there\x20is\x20no\x20limit\x20to\x20how\x20long\x20an\x20integer\x20value\x20can\x20be.\x0a\x0aExample\x201:\x20Creating\x20int\x20and\x20checking\x20type\x0a```python\x0anum\x20=\x20-8\x0aprint(type(num))\x20\x20#\x20Output:\x20<class\x20\x27int\x27>\x0a```\x0a\x0aExample\x202:\x20Arithmetic\x20Operations\x20with\x20integers\x0a```python\x0aa,\x20b\x20=\x205,\x206\x0aprint(\x22Addition:\x22,\x20a\x20+\x20b)\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x2011\x0aprint(\x22Subtraction:\x22,\x209\x20-\x206)\x20\x20\x20\x20#\x20Output:\x203\x0aprint(\x22Division:\x22,\x208\x20//\x202)\x20\x20\x20\x20\x20\x20#\x20Output:\x204\x20(integer\x20division)\x0aprint(\x22Multiplication:\x22,\x203\x20*\x205)\x20#\x20Output:\x2015\x0aprint(\x22Modulus:\x22,\x2025\x20%\x205)\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x200\x0aprint(\x22Exponent:\x22,\x206\x20**\x202)\x20\x20\x20\x20\x20\x20#\x20Output:\x2036\x0a```'},{'title':_0xd291f0(0xb8),'content':'A\x20float\x20is\x20a\x20real\x20number\x20with\x20a\x20floating-point\x20representation.\x20It\x20is\x20specified\x20by\x20a\x20decimal\x20point.\x20Optionally,\x20the\x20character\x20e\x20or\x20E\x20followed\x20by\x20a\x20positive\x20or\x20negative\x20integer\x20may\x20be\x20appended\x20to\x20specify\x20scientific\x20notation.\x0a\x0aExample\x201:\x20Creating\x20float\x20and\x20checking\x20type\x0a```python\x0anum\x20=\x203/4\x0aprint(type(num))\x20\x20#\x20Output:\x20<class\x20\x27float\x27>\x0a\x0anum\x20=\x206\x20*\x207.0\x0aprint(type(num))\x20\x20#\x20Output:\x20<class\x20\x27float\x27>\x0a```\x0a\x0aExample\x202:\x20Arithmetic\x20Operations\x20with\x20floats\x0a```python\x0aa,\x20b\x20=\x205.5,\x203.2\x0aprint(\x22Addition:\x22,\x20a\x20+\x20b)\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x208.7\x0aprint(\x22Subtraction:\x22,\x20a\x20-\x20b)\x20\x20\x20\x20#\x20Output:\x202.3\x0aprint(\x22Division:\x22,\x20a\x20/\x20b)\x20\x20\x20\x20\x20\x20\x20#\x20Output:\x201.71875\x0aprint(\x22Multiplication:\x22,\x20a\x20*\x20b)\x20#\x20Output:\x2017.6\x0a```\x0a\x0aNote:\x20The\x20accuracy\x20of\x20a\x20floating-point\x20number\x20is\x20only\x20up\x20to\x2015\x20decimal\x20places,\x20the\x2016th\x20place\x20can\x20be\x20inaccurate.'},{'title':_0xd291f0(0xc0),'content':_0xd291f0(0x9f)},{'title':'Type\x20Conversion\x20in\x20Python','content':_0xd291f0(0xa4)},{'title':_0xd291f0(0xb4),'content':_0xd291f0(0x8c)}]},'python_algorithms_data_structures':{'title':_0xd291f0(0xab),'sections':[{'title':'Introduction\x20to\x20Algorithms','content':_0xd291f0(0xcf)},{'title':_0xd291f0(0xcc),'content':'Data\x20structures\x20are\x20ways\x20to\x20store\x20and\x20organize\x20data\x20efficiently.\x20Python\x20provides\x20several\x20built-in\x20data\x20structures,\x20including\x20lists,\x20tuples,\x20sets,\x20dictionaries,\x20and\x20more\x20advanced\x20structures\x20like\x20linked\x20lists,\x20stacks,\x20and\x20queues.\x0a\x0aExample:\x0aA\x20list\x20is\x20a\x20simple\x20data\x20structure:\x0a\x0a```python\x0amy_list\x20=\x20[1,\x202,\x203,\x204,\x205]\x0a#\x20You\x20can\x20access\x20elements\x20in\x20the\x20list\x20using\x20their\x20index:\x0aprint(my_list[0])\x20\x20#\x20Outputs:\x201\x0a\x0a#\x20Adding\x20an\x20element\x20to\x20the\x20list\x0amy_list.append(6)\x0aprint(my_list)\x20\x20#\x20Outputs:\x20[1,\x202,\x203,\x204,\x205,\x206]\x0a\x0a#\x20Removing\x20an\x20element\x20from\x20the\x20list\x0aremoved_item\x20=\x20my_list.pop()\x0aprint(removed_item)\x20\x20#\x20Outputs:\x206\x0aprint(my_list)\x20\x20#\x20Outputs:\x20[1,\x202,\x203,\x204,\x205]\x0a```'},{'title':_0xd291f0(0xc3),'content':'Sorting\x20algorithms\x20arrange\x20data\x20in\x20a\x20particular\x20order\x20(ascending\x20or\x20descending).\x20Common\x20sorting\x20algorithms\x20include:\x0a\x0a-\x20Bubble\x20Sort\x0a-\x20Selection\x20Sort\x0a-\x20Merge\x20Sort\x0a-\x20Quick\x20Sort\x0a\x0aExample:\x0aBubble\x20Sort\x20Implementation:\x0a\x0a```python\x0adef\x20bubble_sort(arr):\x0a\x20\x20\x20\x20n\x20=\x20len(arr)\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(n):\x0a\x20\x20\x20\x20\x20\x20\x20\x20for\x20j\x20in\x20range(0,\x20n-i-1):\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if\x20arr[j]\x20>\x20arr[j+1]:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[j],\x20arr[j+1]\x20=\x20arr[j+1],\x20arr[j]\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[64,\x2034,\x2025,\x2012,\x2022,\x2011,\x2090]\x0asorted_list\x20=\x20bubble_sort(unsorted_list)\x0aprint(sorted_list)\x20\x20#\x20Outputs:\x20[11,\x2012,\x2022,\x2025,\x2034,\x2064,\x2090]\x0a```'},{'title':_0xd291f0(0xbe),'content':_0xd291f0(0xb5)},{'title':'Linked\x20Lists','content':'A\x20linked\x20list\x20is\x20a\x20linear\x20data\x20structure\x20where\x20each\x20element\x20(node)\x20contains\x20a\x20reference\x20(pointer)\x20to\x20the\x20next\x20node\x20in\x20the\x20sequence.\x0a\x0aExample:\x0a\x0a```python\x0aclass\x20Node:\x0a\x20\x20\x20\x20def\x20__init__(self,\x20data):\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.data\x20=\x20data\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.next\x20=\x20None\x0a\x0aclass\x20LinkedList:\x0a\x20\x20\x20\x20def\x20__init__(self):\x0a\x20\x20\x20\x20\x20\x20\x20\x20self.head\x20=\x20None\x0a\x0a\x20\x20\x20\x20def\x20append(self,\x20data):\x0a\x20\x20\x20\x20\x20\x20\x20\x20new_node\x20=\x20Node(data)\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20not\x20self.head:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20self.head\x20=\x20new_node\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x0a\x20\x20\x20\x20\x20\x20\x20\x20last_node\x20=\x20self.head\x0a\x20\x20\x20\x20\x20\x20\x20\x20while\x20last_node.next:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20last_node\x20=\x20last_node.next\x0a\x20\x20\x20\x20\x20\x20\x20\x20last_node.next\x20=\x20new_node\x0a\x0a\x20\x20\x20\x20def\x20print_list(self):\x0a\x20\x20\x20\x20\x20\x20\x20\x20current\x20=\x20self.head\x0a\x20\x20\x20\x20\x20\x20\x20\x20while\x20current:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20print(current.data,\x20end=\x22\x20->\x20\x22)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20current\x20=\x20current.next\x0a\x20\x20\x20\x20\x20\x20\x20\x20print(\x22None\x22)\x0a\x0a#\x20Example\x20usage\x0alinked_list\x20=\x20LinkedList()\x0alinked_list.append(1)\x0alinked_list.append(2)\x0alinked_list.append(3)\x0alinked_list.print_list()\x20\x20#\x20Outputs:\x201\x20->\x202\x20->\x203\x20->\x20None\x0a```'},{'title':_0xd291f0(0xea),'content':_0xd291f0(0xa3)},{'title':_0xd291f0(0xb9),'content':_0xd291f0(0x94)},{'title':_0xd291f0(0xf2),'content':_0xd291f0(0xf4)},{'title':_0xd291f0(0x9b),'content':_0xd291f0(0xc7)},{'title':_0xd291f0(0xeb),'content':_0xd291f0(0xba)}]},'sorting_algorithms':{'title':_0xd291f0(0xd8),'sections':[{'title':_0xd291f0(0x90),'content':_0xd291f0(0xc6),'mediaUrl':_0xd291f0(0xdc)},{'title':_0xd291f0(0xa9),'content':_0xd291f0(0xe0),'mediaUrl':_0xd291f0(0xd7)},{'title':_0xd291f0(0xd2),'content':'Definition:\x20Builds\x20a\x20sorted\x20array\x20by\x20taking\x20one\x20element\x20at\x20a\x20time\x20and\x20inserting\x20it\x20into\x20its\x20correct\x20position.\x0a\x0aUse\x20Cases:\x20Works\x20well\x20for\x20nearly\x20sorted\x20or\x20small\x20datasets.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n²)\x0a-\x20Average:\x20O(n²)\x0a-\x20Best:\x20O(n)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20insertion_sort(arr):\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(1,\x20len(arr)):\x0a\x20\x20\x20\x20\x20\x20\x20\x20key\x20=\x20arr[i]\x0a\x20\x20\x20\x20\x20\x20\x20\x20j\x20=\x20i\x20-\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20while\x20j\x20>=\x200\x20and\x20arr[j]\x20>\x20key:\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20arr[j\x20+\x201]\x20=\x20arr[j]\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20j\x20-=\x201\x0a\x20\x20\x20\x20\x20\x20\x20\x20arr[j\x20+\x201]\x20=\x20key\x0a\x20\x20\x20\x20return\x20arr\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[12,\x2011,\x2013,\x205,\x206]\x0asorted_list\x20=\x20insertion_sort(unsorted_list)\x0aprint(sorted_list)\x0a```','mediaUrl':_0xd291f0(0xc2)},{'title':_0xd291f0(0xde),'content':_0xd291f0(0xbd),'mediaUrl':_0xd291f0(0xc9)},{'title':'Quick\x20Sort','content':_0xd291f0(0x91),'mediaUrl':_0xd291f0(0xec)},{'title':_0xd291f0(0x96),'content':_0xd291f0(0xad)},{'title':'Shell\x20Sort','content':_0xd291f0(0xee)},{'title':_0xd291f0(0xa1),'content':_0xd291f0(0xf8)},{'title':'Bucket\x20Sort','content':'Definition:\x20A\x20sorting\x20algorithm\x20that\x20distributes\x20elements\x20into\x20a\x20number\x20of\x20buckets\x20and\x20then\x20sorts\x20each\x20bucket\x20individually\x20using\x20another\x20sorting\x20algorithm.\x0a\x0aUse\x20Cases:\x20Efficient\x20for\x20uniformly\x20distributed\x20data\x20over\x20a\x20range.\x0a\x0aComputational\x20Complexity:\x0a-\x20Worst:\x20O(n²)\x0a-\x20Average:\x20O(n\x20+\x20k),\x20where\x20k\x20is\x20the\x20number\x20of\x20buckets.\x0a-\x20Best:\x20O(n\x20+\x20k)\x0a\x0aPython\x20Example:\x0a```python\x0adef\x20bucket_sort(arr):\x0a\x20\x20\x20\x20bucket\x20=\x20[]\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(len(arr)):\x0a\x20\x20\x20\x20\x20\x20\x20\x20bucket.append([])\x0a\x0a\x20\x20\x20\x20for\x20num\x20in\x20arr:\x0a\x20\x20\x20\x20\x20\x20\x20\x20index\x20=\x20int(10\x20*\x20num)\x0a\x20\x20\x20\x20\x20\x20\x20\x20bucket[index].append(num)\x0a\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(len(arr)):\x0a\x20\x20\x20\x20\x20\x20\x20\x20bucket[i].sort()\x0a\x0a\x20\x20\x20\x20result\x20=\x20[]\x0a\x20\x20\x20\x20for\x20i\x20in\x20range(len(bucket)):\x0a\x20\x20\x20\x20\x20\x20\x20\x20result\x20+=\x20bucket[i]\x0a\x20\x20\x20\x20return\x20result\x0a\x0a#\x20Example\x20usage\x0aunsorted_list\x20=\x20[0.42,\x200.32,\x200.33,\x200.52,\x200.37,\x200.47,\x200.51]\x0asorted_list\x20=\x20bucket_sort(unsorted_list)\x0aprint(sorted_list)\x0a```'},{'title':_0xd291f0(0x93),'content':_0xd291f0(0x9c)},{'title':_0xd291f0(0xb6),'content':'1.\x20Bubble\x20Sort:\x20Simple\x20but\x20inefficient,\x20O(n²),\x20useful\x20for\x20small\x20datasets.\x0a2.\x20Selection\x20Sort:\x20Simple\x20but\x20inefficient,\x20O(n²),\x20good\x20for\x20small\x20datasets\x20where\x20swaps\x20are\x20inexpensive.\x0a3.\x20Insertion\x20Sort:\x20Efficient\x20for\x20small\x20or\x20nearly\x20sorted\x20datasets,\x20O(n)\x20in\x20the\x20best\x20case.\x0a4.\x20Merge\x20Sort:\x20Efficient\x20for\x20large\x20datasets,\x20O(n\x20log\x20n),\x20good\x20for\x20stable\x20sorting.\x0a5.\x20Quick\x20Sort:\x20Highly\x20efficient,\x20O(n\x20log\x20n)\x20on\x20average,\x20preferred\x20for\x20large\x20datasets.\x0a6.\x20Heap\x20Sort:\x20Efficient\x20for\x20large\x20datasets,\x20guaranteed\x20O(n\x20log\x20n)\x20complexity.\x0a7.\x20Shell\x20Sort:\x20Improvement\x20over\x20insertion\x20sort,\x20good\x20for\x20medium-sized\x20datasets.\x0a8.\x20Radix\x20Sort:\x20Efficient\x20for\x20fixed-length\x20integer\x20or\x20string\x20sorting,\x20O(nk)\x20complexity.\x0a9.\x20Bucket\x20Sort:\x20Efficient\x20for\x20uniformly\x20distributed\x20data,\x20average\x20case\x20O(n\x20+\x20k).\x0a10.\x20Counting\x20Sort:\x20Efficient\x20for\x20sorting\x20integers\x20with\x20a\x20known\x20range,\x20O(n\x20+\x20k)\x20complexity.'}]}};_0x109eb3['render'](_0x523612[_0xd291f0(0xe3)](_0x2645c5,{'topics':topics}),document[_0xd291f0(0x9d)](_0xd291f0(0xaf)));